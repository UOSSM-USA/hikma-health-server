/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoTableRouteImport } from './routes/demo.table'
import { Route as DemoStoreRouteImport } from './routes/demo.store'
import { Route as AppUsersIndexRouteImport } from './routes/app/users.index'
import { Route as AppPrescriptionsIndexRouteImport } from './routes/app/prescriptions.index'
import { Route as AppPatientsIndexRouteImport } from './routes/app/patients.index'
import { Route as AppEventFormsIndexRouteImport } from './routes/app/event-forms.index'
import { Route as AppClinicsIndexRouteImport } from './routes/app/clinics.index'
import { Route as AppAppointmentsIndexRouteImport } from './routes/app/appointments.index'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as DemoSentryTestingRouteImport } from './routes/demo.sentry.testing'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'
import { Route as AppSettingsRegisterMobileAppRouteImport } from './routes/app/settings.register-mobile-app'
import { Route as AppPatientsRegisterRouteImport } from './routes/app/patients.register'
import { Route as AppPatientsCustomizeRegistrationFormRouteImport } from './routes/app/patients.customize-registration-form'
import { Route as AppDataEventsRouteImport } from './routes/app/data.events'
import { Route as AppPatientsSplatIndexRouteImport } from './routes/app/patients.$.index'
import { Route as AppClinicsSplatIndexRouteImport } from './routes/app/clinics.$.index'
import { Route as AppUsersManagePermissionsSplatRouteImport } from './routes/app/users.manage-permissions.$'
import { Route as AppUsersEditSplatRouteImport } from './routes/app/users.edit.$'
import { Route as AppPrescriptionsEditSplatRouteImport } from './routes/app/prescriptions.edit.$'
import { Route as AppEventFormsEditSplatRouteImport } from './routes/app/event-forms.edit.$'
import { Route as AppClinicsEditSplatRouteImport } from './routes/app/clinics.edit.$'
import { Route as AppAppointmentsEditSplatRouteImport } from './routes/app/appointments.edit.$'
import { ServerRoute as ApiLoginServerRouteImport } from './routes/api/login'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'
import { ServerRoute as ApiV2SyncServerRouteImport } from './routes/api/v2.sync'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api.trpc.$'
import { ServerRoute as ApiAuthSignOutServerRouteImport } from './routes/api/auth.sign-out'
import { ServerRoute as ApiAuthSignInServerRouteImport } from './routes/api/auth.sign-in'
import { ServerRoute as ApiAuthIsValidTokenServerRouteImport } from './routes/api/auth.is-valid-token'

const rootServerRouteImport = createServerRootRoute()

const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTableRoute = DemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStoreRoute = DemoStoreRouteImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRouteImport,
} as any)
const AppUsersIndexRoute = AppUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AppRoute,
} as any)
const AppPrescriptionsIndexRoute = AppPrescriptionsIndexRouteImport.update({
  id: '/prescriptions/',
  path: '/prescriptions/',
  getParentRoute: () => AppRoute,
} as any)
const AppPatientsIndexRoute = AppPatientsIndexRouteImport.update({
  id: '/patients/',
  path: '/patients/',
  getParentRoute: () => AppRoute,
} as any)
const AppEventFormsIndexRoute = AppEventFormsIndexRouteImport.update({
  id: '/event-forms/',
  path: '/event-forms/',
  getParentRoute: () => AppRoute,
} as any)
const AppClinicsIndexRoute = AppClinicsIndexRouteImport.update({
  id: '/clinics/',
  path: '/clinics/',
  getParentRoute: () => AppRoute,
} as any)
const AppAppointmentsIndexRoute = AppAppointmentsIndexRouteImport.update({
  id: '/appointments/',
  path: '/appointments/',
  getParentRoute: () => AppRoute,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoSentryTestingRoute = DemoSentryTestingRouteImport.update({
  id: '/demo/sentry/testing',
  path: '/demo/sentry/testing',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSettingsRegisterMobileAppRoute =
  AppSettingsRegisterMobileAppRouteImport.update({
    id: '/settings/register-mobile-app',
    path: '/settings/register-mobile-app',
    getParentRoute: () => AppRoute,
  } as any)
const AppPatientsRegisterRoute = AppPatientsRegisterRouteImport.update({
  id: '/patients/register',
  path: '/patients/register',
  getParentRoute: () => AppRoute,
} as any)
const AppPatientsCustomizeRegistrationFormRoute =
  AppPatientsCustomizeRegistrationFormRouteImport.update({
    id: '/patients/customize-registration-form',
    path: '/patients/customize-registration-form',
    getParentRoute: () => AppRoute,
  } as any)
const AppDataEventsRoute = AppDataEventsRouteImport.update({
  id: '/data/events',
  path: '/data/events',
  getParentRoute: () => AppRoute,
} as any)
const AppPatientsSplatIndexRoute = AppPatientsSplatIndexRouteImport.update({
  id: '/patients/$/',
  path: '/patients/$/',
  getParentRoute: () => AppRoute,
} as any)
const AppClinicsSplatIndexRoute = AppClinicsSplatIndexRouteImport.update({
  id: '/clinics/$/',
  path: '/clinics/$/',
  getParentRoute: () => AppRoute,
} as any)
const AppUsersManagePermissionsSplatRoute =
  AppUsersManagePermissionsSplatRouteImport.update({
    id: '/users/manage-permissions/$',
    path: '/users/manage-permissions/$',
    getParentRoute: () => AppRoute,
  } as any)
const AppUsersEditSplatRoute = AppUsersEditSplatRouteImport.update({
  id: '/users/edit/$',
  path: '/users/edit/$',
  getParentRoute: () => AppRoute,
} as any)
const AppPrescriptionsEditSplatRoute =
  AppPrescriptionsEditSplatRouteImport.update({
    id: '/prescriptions/edit/$',
    path: '/prescriptions/edit/$',
    getParentRoute: () => AppRoute,
  } as any)
const AppEventFormsEditSplatRoute = AppEventFormsEditSplatRouteImport.update({
  id: '/event-forms/edit/$',
  path: '/event-forms/edit/$',
  getParentRoute: () => AppRoute,
} as any)
const AppClinicsEditSplatRoute = AppClinicsEditSplatRouteImport.update({
  id: '/clinics/edit/$',
  path: '/clinics/edit/$',
  getParentRoute: () => AppRoute,
} as any)
const AppAppointmentsEditSplatRoute =
  AppAppointmentsEditSplatRouteImport.update({
    id: '/appointments/edit/$',
    path: '/appointments/edit/$',
    getParentRoute: () => AppRoute,
  } as any)
const ApiLoginServerRoute = ApiLoginServerRouteImport.update({
  id: '/api/login',
  path: '/api/login',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiV2SyncServerRoute = ApiV2SyncServerRouteImport.update({
  id: '/api/v2/sync',
  path: '/api/v2/sync',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSignOutServerRoute = ApiAuthSignOutServerRouteImport.update({
  id: '/api/auth/sign-out',
  path: '/api/auth/sign-out',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSignInServerRoute = ApiAuthSignInServerRouteImport.update({
  id: '/api/auth/sign-in',
  path: '/api/auth/sign-in',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthIsValidTokenServerRoute =
  ApiAuthIsValidTokenServerRouteImport.update({
    id: '/api/auth/is-valid-token',
    path: '/api/auth/is-valid-token',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/app/': typeof AppIndexRoute
  '/app/data/events': typeof AppDataEventsRoute
  '/app/patients/customize-registration-form': typeof AppPatientsCustomizeRegistrationFormRoute
  '/app/patients/register': typeof AppPatientsRegisterRoute
  '/app/settings/register-mobile-app': typeof AppSettingsRegisterMobileAppRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/sentry/testing': typeof DemoSentryTestingRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/app/appointments': typeof AppAppointmentsIndexRoute
  '/app/clinics': typeof AppClinicsIndexRoute
  '/app/event-forms': typeof AppEventFormsIndexRoute
  '/app/patients': typeof AppPatientsIndexRoute
  '/app/prescriptions': typeof AppPrescriptionsIndexRoute
  '/app/users': typeof AppUsersIndexRoute
  '/app/appointments/edit/$': typeof AppAppointmentsEditSplatRoute
  '/app/clinics/edit/$': typeof AppClinicsEditSplatRoute
  '/app/event-forms/edit/$': typeof AppEventFormsEditSplatRoute
  '/app/prescriptions/edit/$': typeof AppPrescriptionsEditSplatRoute
  '/app/users/edit/$': typeof AppUsersEditSplatRoute
  '/app/users/manage-permissions/$': typeof AppUsersManagePermissionsSplatRoute
  '/app/clinics/$': typeof AppClinicsSplatIndexRoute
  '/app/patients/$': typeof AppPatientsSplatIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/app': typeof AppIndexRoute
  '/app/data/events': typeof AppDataEventsRoute
  '/app/patients/customize-registration-form': typeof AppPatientsCustomizeRegistrationFormRoute
  '/app/patients/register': typeof AppPatientsRegisterRoute
  '/app/settings/register-mobile-app': typeof AppSettingsRegisterMobileAppRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/sentry/testing': typeof DemoSentryTestingRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/app/appointments': typeof AppAppointmentsIndexRoute
  '/app/clinics': typeof AppClinicsIndexRoute
  '/app/event-forms': typeof AppEventFormsIndexRoute
  '/app/patients': typeof AppPatientsIndexRoute
  '/app/prescriptions': typeof AppPrescriptionsIndexRoute
  '/app/users': typeof AppUsersIndexRoute
  '/app/appointments/edit/$': typeof AppAppointmentsEditSplatRoute
  '/app/clinics/edit/$': typeof AppClinicsEditSplatRoute
  '/app/event-forms/edit/$': typeof AppEventFormsEditSplatRoute
  '/app/prescriptions/edit/$': typeof AppPrescriptionsEditSplatRoute
  '/app/users/edit/$': typeof AppUsersEditSplatRoute
  '/app/users/manage-permissions/$': typeof AppUsersManagePermissionsSplatRoute
  '/app/clinics/$': typeof AppClinicsSplatIndexRoute
  '/app/patients/$': typeof AppPatientsSplatIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/demo/store': typeof DemoStoreRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/app/': typeof AppIndexRoute
  '/app/data/events': typeof AppDataEventsRoute
  '/app/patients/customize-registration-form': typeof AppPatientsCustomizeRegistrationFormRoute
  '/app/patients/register': typeof AppPatientsRegisterRoute
  '/app/settings/register-mobile-app': typeof AppSettingsRegisterMobileAppRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/sentry/testing': typeof DemoSentryTestingRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
  '/app/appointments/': typeof AppAppointmentsIndexRoute
  '/app/clinics/': typeof AppClinicsIndexRoute
  '/app/event-forms/': typeof AppEventFormsIndexRoute
  '/app/patients/': typeof AppPatientsIndexRoute
  '/app/prescriptions/': typeof AppPrescriptionsIndexRoute
  '/app/users/': typeof AppUsersIndexRoute
  '/app/appointments/edit/$': typeof AppAppointmentsEditSplatRoute
  '/app/clinics/edit/$': typeof AppClinicsEditSplatRoute
  '/app/event-forms/edit/$': typeof AppEventFormsEditSplatRoute
  '/app/prescriptions/edit/$': typeof AppPrescriptionsEditSplatRoute
  '/app/users/edit/$': typeof AppUsersEditSplatRoute
  '/app/users/manage-permissions/$': typeof AppUsersManagePermissionsSplatRoute
  '/app/clinics/$/': typeof AppClinicsSplatIndexRoute
  '/app/patients/$/': typeof AppPatientsSplatIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/app/'
    | '/app/data/events'
    | '/app/patients/customize-registration-form'
    | '/app/patients/register'
    | '/app/settings/register-mobile-app'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/sentry/testing'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/app/appointments'
    | '/app/clinics'
    | '/app/event-forms'
    | '/app/patients'
    | '/app/prescriptions'
    | '/app/users'
    | '/app/appointments/edit/$'
    | '/app/clinics/edit/$'
    | '/app/event-forms/edit/$'
    | '/app/prescriptions/edit/$'
    | '/app/users/edit/$'
    | '/app/users/manage-permissions/$'
    | '/app/clinics/$'
    | '/app/patients/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/app'
    | '/app/data/events'
    | '/app/patients/customize-registration-form'
    | '/app/patients/register'
    | '/app/settings/register-mobile-app'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/sentry/testing'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/app/appointments'
    | '/app/clinics'
    | '/app/event-forms'
    | '/app/patients'
    | '/app/prescriptions'
    | '/app/users'
    | '/app/appointments/edit/$'
    | '/app/clinics/edit/$'
    | '/app/event-forms/edit/$'
    | '/app/prescriptions/edit/$'
    | '/app/users/edit/$'
    | '/app/users/manage-permissions/$'
    | '/app/clinics/$'
    | '/app/patients/$'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/demo/store'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/app/'
    | '/app/data/events'
    | '/app/patients/customize-registration-form'
    | '/app/patients/register'
    | '/app/settings/register-mobile-app'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/sentry/testing'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
    | '/app/appointments/'
    | '/app/clinics/'
    | '/app/event-forms/'
    | '/app/patients/'
    | '/app/prescriptions/'
    | '/app/users/'
    | '/app/appointments/edit/$'
    | '/app/clinics/edit/$'
    | '/app/event-forms/edit/$'
    | '/app/prescriptions/edit/$'
    | '/app/users/edit/$'
    | '/app/users/manage-permissions/$'
    | '/app/clinics/$/'
    | '/app/patients/$/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoSentryTestingRoute: typeof DemoSentryTestingRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/login': typeof ApiLoginServerRoute
  '/api/auth/is-valid-token': typeof ApiAuthIsValidTokenServerRoute
  '/api/auth/sign-in': typeof ApiAuthSignInServerRoute
  '/api/auth/sign-out': typeof ApiAuthSignOutServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
  '/api/v2/sync': typeof ApiV2SyncServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/login': typeof ApiLoginServerRoute
  '/api/auth/is-valid-token': typeof ApiAuthIsValidTokenServerRoute
  '/api/auth/sign-in': typeof ApiAuthSignInServerRoute
  '/api/auth/sign-out': typeof ApiAuthSignOutServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
  '/api/v2/sync': typeof ApiV2SyncServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/login': typeof ApiLoginServerRoute
  '/api/auth/is-valid-token': typeof ApiAuthIsValidTokenServerRoute
  '/api/auth/sign-in': typeof ApiAuthSignInServerRoute
  '/api/auth/sign-out': typeof ApiAuthSignOutServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
  '/api/v2/sync': typeof ApiV2SyncServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/demo-names'
    | '/api/login'
    | '/api/auth/is-valid-token'
    | '/api/auth/sign-in'
    | '/api/auth/sign-out'
    | '/api/trpc/$'
    | '/api/v2/sync'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/demo-names'
    | '/api/login'
    | '/api/auth/is-valid-token'
    | '/api/auth/sign-in'
    | '/api/auth/sign-out'
    | '/api/trpc/$'
    | '/api/v2/sync'
  id:
    | '__root__'
    | '/api/demo-names'
    | '/api/login'
    | '/api/auth/is-valid-token'
    | '/api/auth/sign-in'
    | '/api/auth/sign-out'
    | '/api/trpc/$'
    | '/api/v2/sync'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiLoginServerRoute: typeof ApiLoginServerRoute
  ApiAuthIsValidTokenServerRoute: typeof ApiAuthIsValidTokenServerRoute
  ApiAuthSignInServerRoute: typeof ApiAuthSignInServerRoute
  ApiAuthSignOutServerRoute: typeof ApiAuthSignOutServerRoute
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
  ApiV2SyncServerRoute: typeof ApiV2SyncServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/users/': {
      id: '/app/users/'
      path: '/users'
      fullPath: '/app/users'
      preLoaderRoute: typeof AppUsersIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/prescriptions/': {
      id: '/app/prescriptions/'
      path: '/prescriptions'
      fullPath: '/app/prescriptions'
      preLoaderRoute: typeof AppPrescriptionsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/patients/': {
      id: '/app/patients/'
      path: '/patients'
      fullPath: '/app/patients'
      preLoaderRoute: typeof AppPatientsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/event-forms/': {
      id: '/app/event-forms/'
      path: '/event-forms'
      fullPath: '/app/event-forms'
      preLoaderRoute: typeof AppEventFormsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/clinics/': {
      id: '/app/clinics/'
      path: '/clinics'
      fullPath: '/app/clinics'
      preLoaderRoute: typeof AppClinicsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/appointments/': {
      id: '/app/appointments/'
      path: '/appointments'
      fullPath: '/app/appointments'
      preLoaderRoute: typeof AppAppointmentsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/sentry/testing': {
      id: '/demo/sentry/testing'
      path: '/demo/sentry/testing'
      fullPath: '/demo/sentry/testing'
      preLoaderRoute: typeof DemoSentryTestingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/settings/register-mobile-app': {
      id: '/app/settings/register-mobile-app'
      path: '/settings/register-mobile-app'
      fullPath: '/app/settings/register-mobile-app'
      preLoaderRoute: typeof AppSettingsRegisterMobileAppRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/patients/register': {
      id: '/app/patients/register'
      path: '/patients/register'
      fullPath: '/app/patients/register'
      preLoaderRoute: typeof AppPatientsRegisterRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/patients/customize-registration-form': {
      id: '/app/patients/customize-registration-form'
      path: '/patients/customize-registration-form'
      fullPath: '/app/patients/customize-registration-form'
      preLoaderRoute: typeof AppPatientsCustomizeRegistrationFormRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/data/events': {
      id: '/app/data/events'
      path: '/data/events'
      fullPath: '/app/data/events'
      preLoaderRoute: typeof AppDataEventsRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/patients/$/': {
      id: '/app/patients/$/'
      path: '/patients/$'
      fullPath: '/app/patients/$'
      preLoaderRoute: typeof AppPatientsSplatIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/clinics/$/': {
      id: '/app/clinics/$/'
      path: '/clinics/$'
      fullPath: '/app/clinics/$'
      preLoaderRoute: typeof AppClinicsSplatIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/users/manage-permissions/$': {
      id: '/app/users/manage-permissions/$'
      path: '/users/manage-permissions/$'
      fullPath: '/app/users/manage-permissions/$'
      preLoaderRoute: typeof AppUsersManagePermissionsSplatRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/users/edit/$': {
      id: '/app/users/edit/$'
      path: '/users/edit/$'
      fullPath: '/app/users/edit/$'
      preLoaderRoute: typeof AppUsersEditSplatRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/prescriptions/edit/$': {
      id: '/app/prescriptions/edit/$'
      path: '/prescriptions/edit/$'
      fullPath: '/app/prescriptions/edit/$'
      preLoaderRoute: typeof AppPrescriptionsEditSplatRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/event-forms/edit/$': {
      id: '/app/event-forms/edit/$'
      path: '/event-forms/edit/$'
      fullPath: '/app/event-forms/edit/$'
      preLoaderRoute: typeof AppEventFormsEditSplatRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/clinics/edit/$': {
      id: '/app/clinics/edit/$'
      path: '/clinics/edit/$'
      fullPath: '/app/clinics/edit/$'
      preLoaderRoute: typeof AppClinicsEditSplatRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/appointments/edit/$': {
      id: '/app/appointments/edit/$'
      path: '/appointments/edit/$'
      fullPath: '/app/appointments/edit/$'
      preLoaderRoute: typeof AppAppointmentsEditSplatRouteImport
      parentRoute: typeof AppRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/login': {
      id: '/api/login'
      path: '/api/login'
      fullPath: '/api/login'
      preLoaderRoute: typeof ApiLoginServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/v2/sync': {
      id: '/api/v2/sync'
      path: '/api/v2/sync'
      fullPath: '/api/v2/sync'
      preLoaderRoute: typeof ApiV2SyncServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/sign-out': {
      id: '/api/auth/sign-out'
      path: '/api/auth/sign-out'
      fullPath: '/api/auth/sign-out'
      preLoaderRoute: typeof ApiAuthSignOutServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/sign-in': {
      id: '/api/auth/sign-in'
      path: '/api/auth/sign-in'
      fullPath: '/api/auth/sign-in'
      preLoaderRoute: typeof ApiAuthSignInServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/is-valid-token': {
      id: '/api/auth/is-valid-token'
      path: '/api/auth/is-valid-token'
      fullPath: '/api/auth/is-valid-token'
      preLoaderRoute: typeof ApiAuthIsValidTokenServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppDataEventsRoute: typeof AppDataEventsRoute
  AppPatientsCustomizeRegistrationFormRoute: typeof AppPatientsCustomizeRegistrationFormRoute
  AppPatientsRegisterRoute: typeof AppPatientsRegisterRoute
  AppSettingsRegisterMobileAppRoute: typeof AppSettingsRegisterMobileAppRoute
  AppAppointmentsIndexRoute: typeof AppAppointmentsIndexRoute
  AppClinicsIndexRoute: typeof AppClinicsIndexRoute
  AppEventFormsIndexRoute: typeof AppEventFormsIndexRoute
  AppPatientsIndexRoute: typeof AppPatientsIndexRoute
  AppPrescriptionsIndexRoute: typeof AppPrescriptionsIndexRoute
  AppUsersIndexRoute: typeof AppUsersIndexRoute
  AppAppointmentsEditSplatRoute: typeof AppAppointmentsEditSplatRoute
  AppClinicsEditSplatRoute: typeof AppClinicsEditSplatRoute
  AppEventFormsEditSplatRoute: typeof AppEventFormsEditSplatRoute
  AppPrescriptionsEditSplatRoute: typeof AppPrescriptionsEditSplatRoute
  AppUsersEditSplatRoute: typeof AppUsersEditSplatRoute
  AppUsersManagePermissionsSplatRoute: typeof AppUsersManagePermissionsSplatRoute
  AppClinicsSplatIndexRoute: typeof AppClinicsSplatIndexRoute
  AppPatientsSplatIndexRoute: typeof AppPatientsSplatIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppDataEventsRoute: AppDataEventsRoute,
  AppPatientsCustomizeRegistrationFormRoute:
    AppPatientsCustomizeRegistrationFormRoute,
  AppPatientsRegisterRoute: AppPatientsRegisterRoute,
  AppSettingsRegisterMobileAppRoute: AppSettingsRegisterMobileAppRoute,
  AppAppointmentsIndexRoute: AppAppointmentsIndexRoute,
  AppClinicsIndexRoute: AppClinicsIndexRoute,
  AppEventFormsIndexRoute: AppEventFormsIndexRoute,
  AppPatientsIndexRoute: AppPatientsIndexRoute,
  AppPrescriptionsIndexRoute: AppPrescriptionsIndexRoute,
  AppUsersIndexRoute: AppUsersIndexRoute,
  AppAppointmentsEditSplatRoute: AppAppointmentsEditSplatRoute,
  AppClinicsEditSplatRoute: AppClinicsEditSplatRoute,
  AppEventFormsEditSplatRoute: AppEventFormsEditSplatRoute,
  AppPrescriptionsEditSplatRoute: AppPrescriptionsEditSplatRoute,
  AppUsersEditSplatRoute: AppUsersEditSplatRoute,
  AppUsersManagePermissionsSplatRoute: AppUsersManagePermissionsSplatRoute,
  AppClinicsSplatIndexRoute: AppClinicsSplatIndexRoute,
  AppPatientsSplatIndexRoute: AppPatientsSplatIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  DemoStoreRoute: DemoStoreRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoSentryTestingRoute: DemoSentryTestingRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiLoginServerRoute: ApiLoginServerRoute,
  ApiAuthIsValidTokenServerRoute: ApiAuthIsValidTokenServerRoute,
  ApiAuthSignInServerRoute: ApiAuthSignInServerRoute,
  ApiAuthSignOutServerRoute: ApiAuthSignOutServerRoute,
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
  ApiV2SyncServerRoute: ApiV2SyncServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
